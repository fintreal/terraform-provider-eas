name: Test Provider

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 2 * * *'

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EXPO_ACCOUNT_NAME: ${{ secrets.EXPO_ACCOUNT_NAME }}
  TF_VAR_APP_STORE_API_KEY_IDENTIFIER: ${{ secrets.TF_VAR_APP_STORE_API_KEY_IDENTIFIER }}
  TF_VAR_IOS_CERTIFICATE_SERIAL_NUMBER: ${{ secrets.TF_VAR_IOS_CERTIFICATE_SERIAL_NUMBER }}
  TF_VAR_IOS_PUSH_KEY_IDENTIFIER: ${{ secrets.TF_VAR_IOS_PUSH_KEY_IDENTIFIER }}
  TF_VAR_GOOGLE_SERVICE_ACCOUNT_KEY_PROJECT_IDENTIFIER: ${{ secrets.TF_VAR_GOOGLE_SERVICE_ACCOUNT_KEY_PROJECT_IDENTIFIER }}
  TF_VAR_PROVISIONING_PROFILE_BASE64: ${{ secrets.TF_VAR_PROVISIONING_PROFILE_BASE64 }}
  TF_VAR_FCM_KEY: ${{ secrets.TF_VAR_FCM_KEY }}

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.0'

      - name: Install provider
        run: go install .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Setup Terraformrc
        run: |
          mkdir -p ~/.terraform.d/plugins
          cat > ~/.terraformrc << 'EOF'
          provider_installation {
            dev_overrides {
              "fintreal/eas" = "/home/runner/go/bin"
            }
          }
          EOF

      - name: Terraform Apply
        working-directory: .github/test
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: always()
        working-directory: .github/test
        run: terraform destroy -auto-approve
